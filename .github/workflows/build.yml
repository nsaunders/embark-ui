name: build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: pnpm/action-setup@v3
        with:
          version: 9.5.0
          run_install: false

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - run: pnpm install --frozen-lockfile

      - run: pnpm check

      - run: pnpm -r test

      - if: github.ref == 'refs/heads/master'
        run: pnpm -r -F @embark-ui/react cosmos-export

      - if: github.ref == 'refs/heads/master'
        uses: actions/configure-pages@v5

      - if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./packages/react/cosmos-export

      - if: github.ref == 'refs/heads/master'
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Ensure docs are up-to-date.
      # - name: docs
      #   run: |
      #     pnpm run docs
      #     if [[ -n $(git status --porcelain) ]]; then
      #       echo 'Error: Git status is not clean.';
      #       exit 1;
      #     fi

      # - if: github.ref == 'refs/heads/master'
      #   run:
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >>
      #     ~/.npmrc

      # - if: github.ref == 'refs/heads/master'
      #   name: publish
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     title: version packages
      #     commit: version packages
      #     version: pnpm ci:version

      #     # https://github.com/changesets/action/issues/246
      #     # https://github.com/changesets/changesets/pull/674
      #     publish: pnpm ci:publish
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
